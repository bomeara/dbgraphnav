<dbgraphnav>
  <database>
    <DSN>
      <!-- These fields are not trimmed on input, so don't leave extra
	   spaces or newlines inside the tags. More specific info on
	   these values here:
	   http://pear.php.net/manual/en/package.database.mdb2.intro-dsn.php
	-->
      <phptype>pgsql</phptype> <!-- usually mysql or pgsql -->
      <dbsyntax></dbsyntax>
      <protocol></protocol>
      <hostspec>darwin.nescent.org</hostspec> <!-- format: host.com:port -->
      <database>treetapper</database> <!-- database name -->
      <username>treetapper_select</username> <!-- database username -->
      <password></password> <!-- database password -->
      <proto_opts></proto_opts>
      <option></option>
    </DSN>

    <friend_finder>
      <person>
	<query_base parentnode="$1">
	  SELECT $1 AS value,
	  'person' AS type,
	  person_first||' '||person_last AS display_name,
	  'id=$1&amp;type=person' AS callback_url,
	  'shape=doublecircle, color=red, pos="0,0"' AS display_options
	  FROM person
	  WHERE person_id = '$1'
	</query_base>

	<query_string parentnode="$1">
	  SELECT referencetoperson_reference AS value, 
	  'reference' AS type,
	  reference_title AS display_name,
	  'id='||referencetoperson_reference||'&amp;type=reference' AS callback_url,
	  'shape=octagon' AS display_options
	  FROM referencetoperson 
	  LEFT JOIN reference
	  ON referencetoperson_reference=reference_id
	  WHERE referencetoperson_person = '$1'
	</query_string>
	<callback_url>main.php?</callback_url>
	<display_options>
	  color=blue
	</display_options>
      </person>

      <reference>
	<query_base parentnode="$1">
	  SELECT $1 AS value,
	  'reference' AS type,
	  reference_title AS display_name,
	  'main.php?id=$1&amp;type=reference' AS callback_url,
	  'shape=doubleoctagon' AS display_options
	  FROM reference
	  WHERE reference_id = '$1'
	</query_base>

	<query_string parentnode="$1">
	  SELECT referencetoperson_person AS value,
	  'person' AS type,
	  person_first||' '||person_last AS display_name,
	  'main.php?id='||referencetoperson_person||'&amp;type=person' AS callback_url,
	  'shape=ellipse' AS display_options
	  FROM referencetoperson
	  LEFT JOIN person
	  ON referencetoperson_person=person_id
	  WHERE referencetoperson_reference = '$1'
	</query_string>
      </reference>

    </friend_finder>
  </database>

  <graphing>
    <graphviz>
      <!-- System path to graphviz dot or neato binary. Absolute path
      unless Graphviz is in the $PATH variable -->
      <binPath>/usr/local/bin/neato</binPath>
      <!-- Image format as accepted by graphviz. See the docs for more info. -->
      <outputImageFormat>png</outputImageFormat>
      <!-- extra command line arguments to graphviz -->
      <commandLineArgs>-x</commandLineArgs>
      <!-- Use 1 or 0 for these next two values. -->
      <directed>0</directed>
      <strict>1</strict>
      <!-- name of the graph. Should be different if you're using
	   multiple generated image maps on the same page. This
	   functionality isn't deeply tested, but do report
	   problems. -->
      <name>G</name>
    </graphviz>
    <caching>
      <!-- Relative to the application root unless a full path is
      specified. Be sure that this directory is writeable by the
      webserver process. -->
      <path_to_cache>cache/</path_to_cache> 
      <!-- seconds till "simple" considers the graph too old.
	use -1 and "simple" cache behavior to never generate new graphs-->
      <age_limit>15</age_limit>
      <behavior>complex</behavior> <!--none, simple, or complex -->
      <!-- Diff command. Recommend -q option. required for complex caching. -->
      <diff>diff -q</diff>
    </caching>
    <limiting>
      <!-- These settings are provided to allow you to fine-tune your
      graphing results to display images which provide a useful amount
      of information. Often, collections will include some small
      number of graphs which return far too many results to be
      comprehensible. The limting settings help with this.

      Each of the limiting modes saves the removed nodes for further
      processing and display, if desired. The soft_limited and
      hard_limited values of DBGraphNav_Network objects (accessible as
      the graph subproperty of a DBGraphNav_Cache object [see the
      example main.php]) are formatted differently, but may be
      displayed in tabular format or processed further for other
      display options. Hard limiting occurs before soft limiting.-->

      <!-- nodes with more that this many friends do not have their
      friends added to the network at all. -1 to disable. Not
      applicable to base node. Eliminates ALL OUTGOING connections
      from a node which means that some connections are not displayed
      which would otherwise be drawn. This is more effective for
      extremely overpopulated nodes than soft-limiting. -->
      <hard_limit>15</hard_limit>
      
      <!-- Soft limiting mode removes nodes that are only referenced
      by a single overconnected node. This setting determines how many
      friends a node must have before it is judged overconnected. -1
      to disable. Soft limiting IS applied to the base node.-->
      <soft_limit>5</soft_limit>

    </limiting>
    <!-- Global graphviz display options. These are overwritten by
	 options returned in a query. See:
	 http://www.graphviz.org/doc/info/attrs.html 
	 for more info and options. -->
    <display_options>
	<overlap>false</overlap>
	<splines>true</splines>
	<pack>true</pack>
	<size>7,7</size>
    </display_options>

    <misc>
    <!-- Provides a wordwrap setting for wrapping overly long display labels-->
      <wordwrap>20</wordwrap>
    </misc>

  </graphing>
</dbgraphnav>
